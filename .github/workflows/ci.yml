name: CI - Build and Test

# Manual trigger only
on:
  workflow_dispatch:
    inputs:
      test_url:
        description: 'URL to test screenshot functionality'
        required: false
        default: 'https://github.com/jantielens/ha-screenshotter/'
      resolution_width:
        description: 'Screenshot width'
        required: false
        default: '1366'
      resolution_height:
        description: 'Screenshot height'
        required: false
        default: '768'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up test directories
      run: |
        mkdir -p test-data test-share/screenshots
        
    - name: Create test configuration
      run: |
        cat > test-data/options.json << EOF
        {
          "schedule": "*/1 * * * *",
          "urls": "[\"${{ github.event.inputs.test_url || 'https://github.com/jantielens/ha-screenshotter/' }}\"]",
          "resolution_width": ${{ github.event.inputs.resolution_width || 1366 }},
          "resolution_height": ${{ github.event.inputs.resolution_height || 768 }},
          "rotation_degrees": 0,
          "grayscale": false,
          "bit_depth": 24
        }
        EOF
        echo "Test configuration:"
        cat test-data/options.json
        
    - name: Build Docker container
      run: |
        cd ha-screenshotter
        docker build -t ha-screenshotter-test .
        
    - name: Test container startup and screenshot
      run: |
        echo "Starting container test..."
        
        # Run container with timeout to prevent hanging
        timeout 60s docker run --rm \
          -v "$(pwd)/test-data:/data" \
          -v "$(pwd)/test-share:/share" \
          ha-screenshotter-test || true
        
        echo "Container run completed"
        
    - name: Verify screenshot output
      run: |
        echo "Checking for generated screenshots..."
        ls -la test-share/screenshots/
        
        if [ -f "test-share/screenshots/0.jpg" ]; then
          echo "✅ Screenshot generated successfully!"
          
          # Get image info
          file test-share/screenshots/0.jpg
          
          # Check if we can get basic image dimensions (requires imagemagick)
          if command -v identify &> /dev/null; then
            echo "Image details:"
            identify test-share/screenshots/0.jpg
          fi
          
          # Check file size (should be > 0)
          size=$(stat -c%s test-share/screenshots/0.jpg)
          echo "Screenshot file size: $size bytes"
          
          if [ "$size" -gt 1000 ]; then
            echo "✅ Screenshot appears to be valid (size > 1KB)"
          else
            echo "❌ Screenshot file seems too small"
            exit 1
          fi
          
        else
          echo "❌ No screenshot generated"
          echo "Contents of screenshots directory:"
          ls -la test-share/screenshots/
          exit 1
        fi
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-screenshots
        path: test-share/screenshots/
        retention-days: 7
        
    - name: Test summary
      if: always()
      run: |
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        if [ "${{ job.status }}" = "success" ]; then
          echo "- **Build**: ✅ Success" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Build**: ❌ Failed" >> $GITHUB_STEP_SUMMARY
        fi
        echo "- **Test URL**: ${{ github.event.inputs.test_url || 'https://github.com/jantielens/ha-screenshotter/' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Resolution**: ${{ github.event.inputs.resolution_width || 1366 }}x${{ github.event.inputs.resolution_height || 768 }}" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "test-share/screenshots/0.jpg" ]; then
          size=$(stat -c%s test-share/screenshots/0.jpg)
          echo "- **Screenshot**: ✅ Generated (${size} bytes)" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Screenshot**: ❌ Not generated" >> $GITHUB_STEP_SUMMARY
        fi