name: CI Tests (New)
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:
    inputs:
      screenshots_subfolder:
        description: 'Subfolder name inside /media where screenshots are written'
        required: false
        default: 'ha-screenshotter'

jobs:
  screenshot-tests:
    name: Screenshot Configuration Tests
    uses: ./.github/workflows/test-screenshots.yml
    with:
      screenshots_subfolder: ${{ github.event.inputs.screenshots_subfolder || 'ha-screenshotter' }}
  
  webserver-tests:
    name: Webserver Tests
    uses: ./.github/workflows/test-webserver.yml
    with:
      screenshots_subfolder: ${{ github.event.inputs.screenshots_subfolder || 'ha-screenshotter' }}
  
  post-screenshot-comment:
    name: Post Screenshot to PR
    runs-on: ubuntu-latest
    needs: [screenshot-tests]
    if: github.event_name == 'pull_request' && always()
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Download combined screenshot
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: combined-screenshot-image
          path: ./
      
      - name: Check if screenshot exists
        id: check-screenshot
        run: |
          if [ -f "combined_screenshots.png" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "✅ Screenshot found"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "❌ Screenshot not found"
          fi
      
      - name: Upload screenshot to GitHub (for URL)
        if: steps.check-screenshot.outputs.exists == 'true'
        id: upload-image
        uses: actions/upload-artifact@v4
        with:
          name: pr-screenshot-${{ github.event.pull_request.number }}-${{ github.run_number }}
          path: combined_screenshots.png
          retention-days: 30
      
      - name: Post PR comment with artifact link
        if: steps.check-screenshot.outputs.exists == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const runId = context.runId;
            const repo = context.repo;
            const prNumber = context.payload.pull_request.number;
            
            // Get artifact URL
            const artifactUrl = `https://github.com/${repo.owner}/${repo.repo}/actions/runs/${runId}`;
            
            // Check for existing comments
            const { data: comments } = await github.rest.issues.listComments({
              owner: repo.owner,
              repo: repo.repo,
              issue_number: prNumber,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('📸 Screenshot Test Results')
            );
            
            const commentBody = `## 📸 Screenshot Test Results
            
            The combined screenshot image from all tests is ready for review!
            
            ### 🔗 Quick Links
            - **[View Test Results Artifact](${artifactUrl})**
            - **[Download Combined Screenshot](${artifactUrl}#artifacts)** - Look for \`combined-screenshot-image\` (image only, fast download)
            
            ### 👁️ Visual Inspection Required
            **⚠️ Please visually inspect the combined screenshot to verify test results.**
            The image shows all test screenshots side-by-side for easy comparison.
            
            ### 📊 Test Summary
            Check the workflow summary for detailed test results and individual screenshots.
            
            ---
            🤖 *This comment is automatically updated on each push*
            `;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: repo.owner,
                repo: repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
              console.log('Updated existing comment');
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log('Created new comment');
            }

