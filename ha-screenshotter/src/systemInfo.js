/**
 * System information display
 */

const { CONFIG_PATH, WWW_PATH, SCREENSHOTS_PATH } = require('./constants');

/**
 * Display comprehensive system information including version and configuration
 * @param {Object} packageInfo - The package.json object
 * @param {Object} config - The configuration object to display
 */
function displaySystemInfo(packageInfo, config = null) {
  console.log('');
  console.log('‚ïê'.repeat(80));
  console.log('üñ•Ô∏è  SYSTEM INFORMATION');
  console.log('‚ïê'.repeat(80));
  
  // Version and package info
  console.log('üì¶ Application Info:');
  console.log(`   ‚Ä¢ Name: ${packageInfo.name}`);
  console.log(`   ‚Ä¢ Version: ${packageInfo.version}`);
  console.log(`   ‚Ä¢ Description: ${packageInfo.description}`);
  console.log(`   ‚Ä¢ Author: ${packageInfo.author}`);
  
  // Try to get git information if available (development builds)
  try {
    const { execSync } = require('child_process');
    const gitBranch = execSync('git rev-parse --abbrev-ref HEAD 2>/dev/null', { encoding: 'utf8' }).trim();
    const gitCommit = execSync('git rev-parse --short HEAD 2>/dev/null', { encoding: 'utf8' }).trim();
    if (gitBranch && gitCommit) {
      console.log(`   ‚Ä¢ Git Branch: ${gitBranch}`);
      console.log(`   ‚Ä¢ Git Commit: ${gitCommit}`);
    }
  } catch (error) {
    // Git info not available (likely in production Docker container)
  }
  console.log('');
  
  // System environment
  console.log('üîß System Environment:');
  console.log(`   ‚Ä¢ Platform: ${process.platform}`);
  console.log(`   ‚Ä¢ Architecture: ${process.arch}`);
  console.log(`   ‚Ä¢ Node.js Version: ${process.version}`);
  console.log(`   ‚Ä¢ Memory Usage: ${Math.round(process.memoryUsage().heapUsed / 1024 / 1024)}MB`);
  console.log(`   ‚Ä¢ Process ID: ${process.pid}`);
  console.log(`   ‚Ä¢ Started: ${new Date().toISOString()}`);
  console.log('');
  
  // Configuration details (if provided)
  if (config) {
    console.log('‚öôÔ∏è  Configuration:');
    console.log(`   ‚Ä¢ Schedule: ${config.schedule}`);
    console.log(`   ‚Ä¢ URL Count: ${config.urls.length}`);
    console.log(`   ‚Ä¢ Resolution: ${config.resolution_width}x${config.resolution_height}`);
    console.log(`   ‚Ä¢ Rotation: ${config.rotation_degrees}¬∞`);
    console.log(`   ‚Ä¢ Grayscale: ${config.grayscale ? 'enabled' : 'disabled'}`);
    console.log(`   ‚Ä¢ Bit Depth: ${config.bit_depth}-bit`);
    console.log(`   ‚Ä¢ Run Once: ${config.run_once ? 'enabled' : 'disabled'}`);
    console.log(`   ‚Ä¢ Web Server Port: ${config.webserverport > 0 ? config.webserverport : 'disabled'}`);
    console.log('');
    
    console.log('üåê URLs to Screenshot:');
    config.urls.forEach((url, index) => {
      console.log(`   ${index + 1}. ${url}`);
    });
    console.log('');
    
    console.log('üìÇ Paths:');
    console.log(`   ‚Ä¢ Config Path: ${CONFIG_PATH}`);
    console.log(`   ‚Ä¢ WWW Path: ${WWW_PATH}`);
    console.log(`   ‚Ä¢ Screenshots Path: ${SCREENSHOTS_PATH}`);
    console.log('');
  }
  
  // Dependencies
  console.log('üìö Dependencies:');
  Object.entries(packageInfo.dependencies).forEach(([name, version]) => {
    console.log(`   ‚Ä¢ ${name}: ${version}`);
  });
  
  console.log('‚ïê'.repeat(80));
  console.log('');
}

module.exports = {
  displaySystemInfo
};
